const win=window,doc=win.document,consoleLogPrefix="[Optimization Detective]",storageLockTimeSessionKey="odStorageLockTime";function isStorageLocked(e,t){if(0===t)return!1;try{const n=parseInt(sessionStorage.getItem(storageLockTimeSessionKey));return!isNaN(n)&&e<n+1e3*t}catch(e){return!1}}function setStorageLock(e){try{sessionStorage.setItem(storageLockTimeSessionKey,String(e))}catch(e){}}function log(...e){console.log(consoleLogPrefix,...e)}function warn(...e){console.warn(consoleLogPrefix,...e)}function error(...e){console.error(consoleLogPrefix,...e)}function isViewportNeeded(e,t){let n=!1;for(const{minimumViewportWidth:o,complete:i}of t){if(!(e>=o))break;n=!i}return n}function getCurrentTime(){return Date.now()}function recursiveFreeze(e){for(const t of Object.getOwnPropertyNames(e)){const n=e[t];null!==n&&"object"==typeof n&&recursiveFreeze(n)}Object.freeze(e)}let urlMetric;const reservedRootPropertyKeys=new Set(["url","viewport","elements"]);function getRootData(){const e=structuredClone(urlMetric);return recursiveFreeze(e),e}function extendRootData(e){for(const t of Object.getOwnPropertyNames(e))if(reservedRootPropertyKeys.has(t))throw new Error(`Disallowed setting of key '${t}' on root.`);Object.assign(urlMetric,e)}const elementsByXPath=new Map,reservedElementPropertyKeys=new Set(["isLCP","isLCPCandidate","xpath","intersectionRatio","intersectionRect","boundingClientRect"]);function getElementData(e){const t=elementsByXPath.get(e);if(t){const e=structuredClone(t);return recursiveFreeze(e),e}return null}function extendElementData(e,t){if(!elementsByXPath.has(e))throw new Error(`Unknown element with XPath: ${e}`);for(const e of Object.getOwnPropertyNames(t))if(reservedElementPropertyKeys.has(e))throw new Error(`Disallowed setting of key '${e}' on element.`);const n=elementsByXPath.get(e);Object.assign(n,t)}export default async function detect({serveTime:e,detectionTimeWindow:t,minViewportAspectRatio:n,maxViewportAspectRatio:o,isDebug:i,extensionModuleUrls:r,restApiEndpoint:s,restApiNonce:c,currentUrl:a,urlMetricSlug:l,urlMetricNonce:d,urlMetricGroupStatuses:u,storageLockTTL:g,webVitalsLibrarySrc:w,urlMetricGroupCollection:f}){const m=getCurrentTime();if(i&&log("Stored URL metric group collection:",f),m-e>t)return void(i&&warn("Aborted detection due to being outside detection time window."));if(!isViewportNeeded(win.innerWidth,u))return void(i&&log("No need for URL metrics from the current viewport."));const p=win.innerWidth/win.innerHeight;if(p<n||p>o)return void(i&&warn(`Viewport aspect ratio (${p}) is not in the accepted range of ${n} to ${o}.`));if(await new Promise((e=>{"loading"!==doc.readyState?e():doc.addEventListener("DOMContentLoaded",e,{once:!0})})),await new Promise((e=>{"complete"===doc.readyState?e():win.addEventListener("load",e,{once:!0})})),"function"==typeof requestIdleCallback&&await new Promise((e=>{requestIdleCallback(e)})),isStorageLocked(m,g))return void(i&&warn("Aborted detection due to storage being locked."));if(doc.documentElement.scrollTop>0)return void(i&&warn("Aborted detection since initial scroll position of page is not at the top."));i&&log("Proceeding with detection");const h=new Map;for(const e of r)try{const t=await import(e);h.set(e,t),t.initialize instanceof Function&&t.initialize({isDebug:i})}catch(t){error(`Failed to initialize extension '${e}':`,t)}const y=doc.body.querySelectorAll("[data-od-xpath]"),v=new Map([...y].map((e=>[e,e.dataset.odXpath]))),L=[];let P;function b(){P instanceof IntersectionObserver&&(P.disconnect(),win.removeEventListener("scroll",b))}v.size>0&&(await new Promise((e=>{P=new IntersectionObserver((t=>{for(const e of t)L.push(e);e()}),{root:null,threshold:0});for(const e of v.keys())P.observe(e)})),win.addEventListener("scroll",b,{once:!0,passive:!0}));const{onLCP:R}=await import(w),S=[];await new Promise((e=>{R((t=>{S.push(t),e()}),{reportAllChanges:!0})})),b(),i&&log("Detection is stopping."),urlMetric={url:a,viewport:{width:win.innerWidth,height:win.innerHeight},elements:[]};const C=S.at(-1);for(const e of L){const t=v.get(e.target);if(!t){i&&error("Unable to look up XPath for element");continue}const n={isLCP:e.target===C?.entries[0]?.element,isLCPCandidate:!!S.find((t=>t.entries[0]?.element===e.target)),xpath:t,intersectionRatio:e.intersectionRatio,intersectionRect:e.intersectionRect,boundingClientRect:e.boundingClientRect};urlMetric.elements.push(n),elementsByXPath.set(n.xpath,n)}if(i&&log("Current URL metric:",urlMetric),await new Promise((e=>{win.addEventListener("pagehide",e,{once:!0}),win.addEventListener("pageswap",e,{once:!0}),doc.addEventListener("visibilitychange",(()=>{"hidden"===document.visibilityState&&e()}),{once:!0})})),h.size>0)for(const[e,t]of h.entries())if(t.finalize instanceof Function)try{await t.finalize({isDebug:i,getRootData,getElementData,extendElementData,extendRootData})}catch(t){error(`Unable to finalize module '${e}':`,t)}setStorageLock(getCurrentTime()),i&&log("Sending URL metric:",urlMetric);const D=new URL(s);D.searchParams.set("_wpnonce",c),D.searchParams.set("slug",l),D.searchParams.set("nonce",d),navigator.sendBeacon(D,new Blob([JSON.stringify(urlMetric)],{type:"application/json"})),v.clear()}